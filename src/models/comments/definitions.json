{
  "list": {
    "definition": "GET /wp/v2/comments",
    "arguments": {
      "context": "Scope under which the request is made; determines fields present in response. Default: view One of: view, embed, edit",
      "page": "Current page of the collection. Default: 1",
      "per_page": "Maximum number of items to be returned in result set. Default: 10",
      "search": "Limit results to those matching a string.",
      "after": "Limit response to comments published after a given ISO8601 compliant date.",
      "author": "Limit result set to comments assigned to specific user IDs. Requires authorization.",
      "author_exclude": "Ensure result set excludes comments assigned to specific user IDs. Requires authorization.",
      "author_email": "Limit result set to that from a specific author email. Requires authorization.",
      "before": "Limit response to comments published before a given ISO8601 compliant date.",
      "exclude": "Ensure result set excludes specific IDs.",
      "include": "Limit result set to specific IDs.",
      "offset": "Offset the result set by a specific number of items.",
      "order": "Order sort attribute ascending or descending. Default: desc One of: asc, desc",
      "orderby": "Sort collection by object attribute. Default: date_gmt One of: date, date_gmt, id, include, post, parent, type",
      "parent": "Limit result set to comments of specific parent IDs.",
      "parent_exclude": "Ensure result set excludes specific parent IDs.",
      "post": "Limit result set to comments assigned to specific post IDs.",
      "status": "Limit result set to comments assigned a specific status. Requires authorization. Default: approve",
      "type": "Limit result set to comments assigned a specific type. Requires authorization. Default: comment",
      "password": "The password for the post if it is password protected."
    }
  },
  "create": {
    "definition": "POST /wp/v2/comments",
    "arguments": {
      "author": "The ID of the user object, if author was a user.",
      "author_email": "Email address for the object author.",
      "author_ip": "IP address for the object author.",
      "author_name": "Display name for the object author.",
      "author_url": "URL for the object author.",
      "author_user_agent": "User agent for the object author.",
      "content": "The content for the object.",
      "date": "The date the object was published, in the site's timezone.",
      "date_gmt": "The date the object was published, as GMT.",
      "parent": "The ID for the parent of the object.",
      "post": "The ID of the associated post object.",
      "status": "State of the object.",
      "meta": "Meta fields."
    }
  },
  "retrieve": {
    "definition": "GET /wp/v2/comments/<id>",
    "arguments": {
      "id": "Unique identifier for the object.",
      "context": "Scope under which the request is made; determines fields present in response. Default: view One of: view, embed, edit",
      "password": "The password for the parent post of the comment (if the post is password protected)."
    }
  },
  "update": {
    "definition": "POST /wp/v2/comments/<id>",
    "arguments": {
      "id": "Unique identifier for the object.",
      "author": "The ID of the user object, if author was a user.",
      "author_email": "Email address for the object author.",
      "author_ip": "IP address for the object author.",
      "author_name": "Display name for the object author.",
      "author_url": "URL for the object author.",
      "author_user_agent": "User agent for the object author.",
      "content": "The content for the object.",
      "date": "The date the object was published, in the site's timezone.",
      "date_gmt": "The date the object was published, as GMT.",
      "parent": "The ID for the parent of the object.",
      "post": "The ID of the associated post object.",
      "status": "State of the object.",
      "meta": "Meta fields."
    }
  },
  "delete": {
    "definition": "DELETE /wp/v2/comments/<id>",
    "arguments": {
      "id": "Unique identifier for the object.",
      "force": "Whether to bypass trash and force deletion.",
      "password": "The password for the parent post of the comment (if the post is password protected)."
    }
  },
  "schema": {
    "id": {
      "type": "integer",
      "content": "Unique identifier for the object. Read only Context: view, edit, embed"
    },
    "author": {
      "type": "integer",
      "content": "The ID of the user object, if author was a user. Context: view, edit, embed"
    },
    "author_email": {
      "type": "string, email",
      "content": "Email address for the object author. Context: edit"
    },
    "author_ip": {
      "type": "string, ip",
      "content": "IP address for the object author. Context: edit"
    },
    "author_name": {
      "type": "string",
      "content": "Display name for the object author. Context: view, edit, embed"
    },
    "author_url": {
      "type": "string, uri",
      "content": "URL for the object author. Context: view, edit, embed"
    },
    "author_user_agent": {
      "type": "string",
      "content": "User agent for the object author. Context: edit"
    },
    "content": {
      "type": "object",
      "content": "The content for the object. Context: view, edit, embed"
    },
    "date": {
      "type": "string, datetime ([details](https://core.trac.wordpress.org/ticket/41032))",
      "content": "The date the object was published, in the site's timezone. Context: view, edit, embed"
    },
    "date_gmt": {
      "type": "string, datetime ([details](https://core.trac.wordpress.org/ticket/41032))",
      "content": "The date the object was published, as GMT. Context: view, edit"
    },
    "link": {
      "type": "string, uri",
      "content": "URL to the object. Read only Context: view, edit, embed"
    },
    "parent": {
      "type": "integer",
      "content": "The ID for the parent of the object. Context: view, edit, embed"
    },
    "post": {
      "type": "integer",
      "content": "The ID of the associated post object. Context: view, edit"
    },
    "status": {
      "type": "string",
      "content": "State of the object. Context: view, edit"
    },
    "type": {
      "type": "string",
      "content": "Type of Comment for the object. Read only Context: view, edit, embed"
    },
    "author_avatar_urls": {
      "type": "object",
      "content": "Avatar URLs for the object author. Read only Context: view, edit, embed"
    },
    "meta": {
      "type": "object",
      "content": "Meta fields. Context: view, edit"
    }
  }
}