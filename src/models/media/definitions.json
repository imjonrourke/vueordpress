{
  "list": {
    "definition": "GET /wp/v2/media",
    "arguments": {
      "context": "Scope under which the request is made; determines fields present in response. Default: view One of: view, embed, edit",
      "page": "Current page of the collection. Default: 1",
      "per_page": "Maximum number of items to be returned in result set. Default: 10",
      "search": "Limit results to those matching a string.",
      "after": "Limit response to posts published after a given ISO8601 compliant date.",
      "author": "Limit result set to posts assigned to specific authors.",
      "author_exclude": "Ensure result set excludes posts assigned to specific authors.",
      "before": "Limit response to posts published before a given ISO8601 compliant date.",
      "exclude": "Ensure result set excludes specific IDs.",
      "include": "Limit result set to specific IDs.",
      "offset": "Offset the result set by a specific number of items.",
      "order": "Order sort attribute ascending or descending. Default: desc One of: asc, desc",
      "orderby": "Sort collection by object attribute. Default: date One of: author, date, id, include, modified, parent, relevance, slug, include_slugs, title",
      "parent": "Limit result set to items with particular parent IDs.",
      "parent_exclude": "Limit result set to all items except those of a particular parent ID.",
      "slug": "Limit result set to posts with one or more specific slugs.",
      "status": "Limit result set to posts assigned one or more statuses. Default: inherit",
      "media_type": "Limit result set to attachments of a particular media type. One of: image, video, audio, application",
      "mime_type": "Limit result set to attachments of a particular MIME type."
    }
  },
  "create": {
    "definition": "POST /wp/v2/media",
    "arguments": {
      "date": "The date the object was published, in the site's timezone.",
      "date_gmt": "The date the object was published, as GMT.",
      "slug": "An alphanumeric identifier for the object unique to its type.",
      "status": "A named status for the object. One of: publish, future, draft, pending, private",
      "title": "The title for the object.",
      "author": "The ID for the author of the object.",
      "comment_status": "Whether or not comments are open on the object. One of: open, closed",
      "ping_status": "Whether or not the object can be pinged. One of: open, closed",
      "meta": "Meta fields.",
      "template": "The theme file to use to display the object.",
      "alt_text": "Alternative text to display when attachment is not displayed.",
      "caption": "The attachment caption.",
      "description": "The attachment description.",
      "post": "The ID for the associated post of the attachment."
    }
  },
  "retrieve": {
    "definition": "GET /wp/v2/media/<id>",
    "arguments": {
      "id": "Unique identifier for the object.",
      "context": "Scope under which the request is made; determines fields present in response. Default: view One of: view, embed, edit"
    }
  },
  "update": {
    "definition": "POST /wp/v2/media/<id>",
    "arguments": {
      "id": "Unique identifier for the object.",
      "date": "The date the object was published, in the site's timezone.",
      "date_gmt": "The date the object was published, as GMT.",
      "slug": "An alphanumeric identifier for the object unique to its type.",
      "status": "A named status for the object. One of: publish, future, draft, pending, private",
      "title": "The title for the object.",
      "author": "The ID for the author of the object.",
      "comment_status": "Whether or not comments are open on the object. One of: open, closed",
      "ping_status": "Whether or not the object can be pinged. One of: open, closed",
      "meta": "Meta fields.",
      "template": "The theme file to use to display the object.",
      "alt_text": "Alternative text to display when attachment is not displayed.",
      "caption": "The attachment caption.",
      "description": "The attachment description.",
      "post": "The ID for the associated post of the attachment."
    }
  },
  "delete": {
    "definition": "DELETE /wp/v2/media/<id>",
    "arguments": {
      "id": "Unique identifier for the object.",
      "force": "Whether to bypass trash and force deletion."
    }
  },
  "schema": {
    "date": {
      "type": "string, datetime ([details](https://core.trac.wordpress.org/ticket/41032))",
      "content": "The date the object was published, in the site's timezone. Context: view, edit, embed"
    },
    "date_gmt": {
      "type": "string, datetime ([details](https://core.trac.wordpress.org/ticket/41032))",
      "content": "The date the object was published, as GMT. Context: view, edit"
    },
    "guid": {
      "type": "object",
      "content": "The globally unique identifier for the object. Read only Context: view, edit"
    },
    "id": {
      "type": "integer",
      "content": "Unique identifier for the object. Read only Context: view, edit, embed"
    },
    "link": {
      "type": "string, uri",
      "content": "URL to the object. Read only Context: view, edit, embed"
    },
    "modified": {
      "type": "string, datetime ([details](https://core.trac.wordpress.org/ticket/41032))",
      "content": "The date the object was last modified, in the site's timezone. Read only Context: view, edit"
    },
    "modified_gmt": {
      "type": "string, datetime ([details](https://core.trac.wordpress.org/ticket/41032))",
      "content": "The date the object was last modified, as GMT. Read only Context: view, edit"
    },
    "slug": {
      "type": "string",
      "content": "An alphanumeric identifier for the object unique to its type. Context: view, edit, embed"
    },
    "status": {
      "type": "string",
      "content": "A named status for the object. Context: view, edit One of: publish, future, draft, pending, private"
    },
    "type": {
      "type": "string",
      "content": "Type of Post for the object. Read only Context: view, edit, embed"
    },
    "permalink_template": {
      "type": "string",
      "content": "Permalink template for the object. Read only Context: edit"
    },
    "generated_slug": {
      "type": "string",
      "content": "Slug automatically generated from the object title. Read only Context: edit"
    },
    "title": {
      "type": "object",
      "content": "The title for the object. Context: view, edit, embed"
    },
    "author": {
      "type": "integer",
      "content": "The ID for the author of the object. Context: view, edit, embed"
    },
    "comment_status": {
      "type": "string",
      "content": "Whether or not comments are open on the object. Context: view, edit One of: open, closed"
    },
    "ping_status": {
      "type": "string",
      "content": "Whether or not the object can be pinged. Context: view, edit One of: open, closed"
    },
    "meta": {
      "type": "object",
      "content": "Meta fields. Context: view, edit"
    },
    "template": {
      "type": "string",
      "content": "The theme file to use to display the object. Context: view, edit"
    },
    "alt_text": {
      "type": "string",
      "content": "Alternative text to display when attachment is not displayed. Context: view, edit, embed"
    },
    "caption": {
      "type": "object",
      "content": "The attachment caption. Context: view, edit, embed"
    },
    "description": {
      "type": "object",
      "content": "The attachment description. Context: view, edit"
    },
    "media_type": {
      "type": "string",
      "content": "Attachment type. Read only Context: view, edit, embed One of: image, file"
    },
    "mime_type": {
      "type": "string",
      "content": "The attachment MIME type. Read only Context: view, edit, embed"
    },
    "media_details": {
      "type": "object",
      "content": "Details about the media file, specific to its type. Read only Context: view, edit, embed"
    },
    "post": {
      "type": "integer",
      "content": "The ID for the associated post of the attachment. Context: view, edit"
    },
    "source_url": {
      "type": "string, uri",
      "content": "URL to the original attachment file. Read only Context: view, edit, embed"
    }
  }
}